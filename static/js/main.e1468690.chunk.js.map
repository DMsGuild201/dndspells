{"version":3,"sources":["taurus2.jpg","spell.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","color","bard","cleric","druid","paladin","ranger","sorcerer","warlock","wizard","gradientize","casters","gradient","position","step","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","caster","value","err","return","StyledAdditionalCaster","styled","props","react_default","a","createElement","className","_templateObject","CasterLabel","span","_templateObject2","SpellTooltip","map","key","this","name","level","renderCasterLabels","additionalCasters","React","Component","StyledSpellTooltip","_templateObject3","Spell","_React$Component2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","additionalCastersShown","additionalCaster","_this","StyledSpell","assign","onClick","renderAdditionalCasters","SpellLevel","selected","StyledSpellFallback","div","attrs","style","background","highlightColors","_templateObject4","hasOpacity","gridColumnStart","coordinates","gridRowStart","_templateObject5","_templateObject6","EditModeMessage","App_templateObject","ConicGradientMessage","App_templateObject2","CopyrightMessage","App_templateObject3","HighlightLabel","App_templateObject4","StyledButton","href","label","App_templateObject5","filled","lighten","swap","spells","i1","i2","spell","index","_objectSpread","App_templateObject6","Wrapper","_templateObject7","Header","header","_templateObject8","BoardWrapper","_templateObject9","Board","_templateObject10","Aside","aside","_templateObject11","Logo","_templateObject12","ColumnBreakerH2","h2","_templateObject13","App","call","state","selectedId","highlightedCasters","editMode","timeSinceLastSave","currentKey","Spells","_this2","timerID","setInterval","tick","clearInterval","setState","handleSave","console","log","jsonData","fileData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","download","click","includes","filter","hcaster","newCasters","push","i","_this$state","Number","_this3","_this4","_this5","Fragment","renderEditUi","handleHighlightClick","spell_Spell","id","getHighlightColors","handleClick","src","avatar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1468690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/taurus2.31f30c0f.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const color = {\r\n    bard: '#E052E0',\r\n    cleric: '#EB4747',\r\n    druid: '#60DF20',\r\n    paladin: '#F5D63D',\r\n    ranger: '#2EA02E',\r\n    sorcerer: '#F2800D',\r\n    warlock: '#A852FF',\r\n    wizard: '#4C88FF'\r\n}\r\n\r\nfunction gradientize(casters) {\r\n    let gradient = '';\r\n    let position = 0;\r\n    let step = 100/casters.length;\r\n    for (let caster of casters) {\r\n        if (position) {\r\n            gradient += ', ';\r\n        }\r\n        gradient += color[caster] + ' ' + position + '% ' + (position += step) + '%';\r\n    }\r\n    return gradient;\r\n}\r\n\r\nfunction AdditionalCaster(props) {\r\n\r\n    return (\r\n        <div className={props.className}></div>\r\n    );\r\n}\r\n\r\nconst StyledAdditionalCaster = styled(AdditionalCaster)`\r\n    position: absolute;\r\n    width: 25%;\r\n    height: 25%;\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 0 0.15em #222;\r\n    background-color: ${props => color[props.caster]};\r\n\r\n    @media screen and (min-width: 1920px) {\r\n        width: 25%;\r\n        height: 25%;\r\n        box-shadow: 0 0 0 0.15vw #222;\r\n    }\r\n\r\n    :first-of-type {\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n\r\n    :nth-of-type(2) {\r\n        top: 0;\r\n        right: 0;\r\n    }\r\n`;\r\n\r\nexport const CasterLabel = styled.span`\r\n    color: ${props => color[props.caster]};\r\n    text-transform: capitalize;\r\n\r\n    :not(:last-of-type) {\r\n        :after {\r\n            content: ', ';\r\n        }\r\n    }\r\n`;\r\n\r\nclass SpellTooltip extends React.Component {\r\n\r\n    renderCasterLabels(casters) {\r\n\r\n        return casters.map(caster => <CasterLabel key={caster} caster={caster}>{caster}</CasterLabel>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className={this.props.className}>\r\n                <h3>{this.props.name}</h3>\r\n                <h4>{this.props.level ? 'LEVEL ' + this.props.level : 'CANTRIP'}</h4>\r\n                <p>{this.renderCasterLabels(this.props.casters)}{this.props.additionalCasters.length > 0 ? ' and subclasses of ' : ''}{this.renderCasterLabels(this.props.additionalCasters)}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst StyledSpellTooltip = styled(SpellTooltip)`\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    display: block;\r\n    position: absolute;\r\n    min-width: 10em;\r\n    top: 115%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(10px);\r\n    background-color: #111;\r\n    color: #aaa;\r\n    font-size: 0.75em;\r\n    line-height: 1.3;\r\n    padding: 0.75em;\r\n    border-radius: 0.5em;\r\n    transition: box-shadow 0.2s, opacity 0.2s, transform 0.2s;\r\n    box-shadow: 0 0 1em 0 rgba(0,0,0,0.5);\r\n    z-index: 2;\r\n\r\n    :before {\r\n        content: '';\r\n        position: absolute;\r\n        left: calc(50% - 0.5em);\r\n        top: -0.5em;\r\n        width: 0;\r\n        height: 0;\r\n        border-style: solid;\r\n        border-width: 0 0.5em 0.5em 0.5em;\r\n        border-color: transparent transparent #111 transparent;\r\n    }\r\n\r\n    h3, h4, p {\r\n        margin: 0;\r\n    }\r\n\r\n    h3 {\r\n        color: #fff;\r\n        text-transform: uppercase;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    h4 {\r\n        border-bottom: 1px solid #333;\r\n        padding-bottom: 0.5em;\r\n        margin-bottom: 0.5em;\r\n    }\r\n\r\n    p {\r\n        font-family: 'Merriweather', serif;\r\n        line-height: 1.5;\r\n        text-align: left;\r\n    }\r\n`;\r\n\r\n/*const renderAdditionalCasters = additionalCasters => additionalCasters ?\r\n    additionalCasters.map(additionalCaster => <StyledAdditionalCaster key={additionalCaster} caster={additionalCaster}/>) :\r\n    '';*/\r\n\r\nexport class Spell extends React.Component {\r\n\r\n    renderAdditionalCasters() {\r\n\r\n        return this.props.additionalCastersShown.map(additionalCaster => <StyledAdditionalCaster key={additionalCaster} caster={additionalCaster}/>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <StyledSpell {...this.props} className={this.props.className} onClick={() => this.props.onClick()}>\r\n                {this.renderAdditionalCasters(this.props.additionalCastersShown)}\r\n                <SpellLevel></SpellLevel>\r\n                <StyledSpellTooltip name={this.props.name} level={this.props.level} casters={this.props.casters} additionalCasters={this.props.additionalCasters} selected={this.props.selected} />\r\n                <StyledSpellFallback {...this.props} />\r\n            </StyledSpell>\r\n        );\r\n    }\r\n}\r\n\r\nconst StyledSpellFallback = styled.div.attrs({\r\n    style: props => ({\r\n        background: props.highlightColors.length\r\n            ? 'linear-gradient(' + gradientize(props.highlightColors) + ')'\r\n            : 'linear-gradient(' + gradientize(props.casters) + ')'\r\n    })\r\n})`\r\n    @supports (background: conic-gradient(rgb(76, 136, 255) 0%, rgb(76, 136, 255) 100%)) {\r\n        display: none;\r\n    }\r\n\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    border-radius: 100%;\r\n    ${props => (props.hasOpacity || props.highlightColors.length || props.selected) ? '' : 'opacity: 0.25;'}\r\n    transition: box-shadow 0.2s, opacity 0.2s;\r\n    cursor: pointer;\r\n    z-index: -2;\r\n`;\r\n\r\nexport const StyledSpell = styled.div.attrs({\r\n    style: props => ({\r\n        background: props.highlightColors.length\r\n            ? 'conic-gradient(' + gradientize(props.highlightColors) + ')'\r\n            : 'conic-gradient(' + gradientize(props.casters) + ')',\r\n        gridColumnStart: props.coordinates[0],\r\n        gridRowStart: props.coordinates[1]\r\n    })\r\n})`\r\n    width: 100%;\r\n    padding-top: 100%;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    ${props => props.selected ? 'box-shadow: 0 0 0 0.1em #fff;' : ''}\r\n    ${props => props.selected ? 'z-index: 2;' : ''}\r\n    ${props => (props.hasOpacity || props.highlightColors.length || props.selected) ? '' : 'opacity: 0.25;'}\r\n    transition: box-shadow 0.2s, opacity 0.2s;\r\n    cursor: pointer;\r\n\r\n    @media screen and (min-width: 1920px) {\r\n        ${props => props.selected ? 'box-shadow: 0 0 0 0.5vh #fff;' : ''}\r\n    }\r\n\r\n    :hover {\r\n        ${props => props.selected ? 'box-shadow: 0 0 0 0.2em #fff;' : 'box-shadow: 0 0 0 0.25vh #222, 0 0 0 0.5vh #fff;'}\r\n        opacity: 1;\r\n        z-index: 2;\r\n\r\n        ${StyledSpellTooltip} {\r\n            opacity: 1;\r\n            visibility: visible;\r\n            transform: translateX(-50%) translateY(0);\r\n        }\r\n    }\r\n`;\r\n\r\nconst SpellLevel = styled.div`\r\n    position: absolute;\r\n    top: calc(50% - 0.75vw);\r\n    left: 0;\r\n    right: 0;\r\n    font-size: 1.5vw;\r\n    line-height: 1.5vw;\r\n    text-align: center;\r\n    color: #222;\r\n\r\n    @media only screen and (min-width: 1280px) {\r\n        top: calc(50% - 0.75 * 12.8px);\r\n        font-size: calc(1.5 * 12.8px);\r\n        line-height: calc(1.5 * 12.8px);\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { lighten } from 'polished';\r\n\r\nimport { color, Spell, CasterLabel } from './spell';\r\nimport Spells from './spells';\r\nimport avatar from './taurus2.jpg';\r\n\r\nconst casters = [\r\n    'bard',\r\n    'cleric',\r\n    'druid',\r\n    'paladin',\r\n    'ranger',\r\n    'sorcerer',\r\n    'warlock',\r\n    'wizard'\r\n]\r\n\r\nconst EditModeMessage = styled.div`\r\n    background-color: ${color.paladin};\r\n    color: #222;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border-radius: 0.75em;\r\n    font-family: 'Lato', sans-serif;\r\n    padding: 1em;\r\n    margin: 1em 0;\r\n\r\n    p {\r\n        color: #222;\r\n        margin: 0 0 1em 0;\r\n    }\r\n`;\r\n\r\nconst ConicGradientMessage = styled.div`\r\n    @supports (background: conic-gradient(rgb(76, 136, 255) 0%, rgb(76, 136, 255) 100%)) {\r\n        display: none;\r\n    }\r\n    background-color: ${color.paladin};\r\n    color: #222;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border-radius: 0.75em;\r\n    font-family: 'Lato', sans-serif;\r\n    padding: 1em;\r\n    margin: 1em 0;\r\n`;\r\n\r\nconst CopyrightMessage = styled.p`\r\n    color: #666;\r\n    column-span: all;\r\n    font-size: 0.75em;\r\n`;\r\n\r\nconst HighlightLabel = styled.span`\r\n    margin-right: 0.5em;\r\n    color: #aaa;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nfunction Button(props) {\r\n\r\n    return <button className={props.className} href=\"#\" onClick={() => props.onClick()}>{props.label}</button>\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n    border: 1px solid ${props => props.color ? props.color : '#ccc'};\r\n    border-radius: 0.75rem;\r\n    background: ${props => props.filled\r\n        ? props.color\r\n            ? props.color\r\n            : '#ccc'\r\n        : '#222' };\r\n    color: ${props => props.filled\r\n        ? '#222'\r\n        : props.color\r\n            ? props.color\r\n            : '#ccc'};\r\n    font-family: 'Lato', sans-serif;\r\n    font-size: 1em;\r\n    line-height: 1.3;\r\n    white-space: nowrap;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    padding: 0.75em 1em;\r\n    margin: 0.5em;\r\n    cursor: pointer;\r\n    outline: none;\r\n\r\n    :hover {\r\n        border: 1px solid ${props => props.filled\r\n        ? '#222'\r\n        : props.color\r\n            ? lighten(0.1, props.color)\r\n            : '#fff'};\r\n        color: ${props => props.filled\r\n            ? '#222'\r\n            : props.color\r\n                ? lighten(0.1, props.color)\r\n                : '#fff'};\r\n        background: ${props => props.filled\r\n            ? props.color\r\n                ? lighten(0.1, props.color)\r\n                : '#ccc'\r\n            : '#222' };;\r\n    }\r\n`;\r\n\r\nfunction swap(spells, i1, i2) {\r\n\r\n    return spells.map((spell, index) => {\r\n        switch (index) {\r\n            case i1: return {...spell, coordinates: spells[i2].coordinates};\r\n            case i2: return {...spell, coordinates: spells[i1].coordinates};\r\n            default: return spell;\r\n        }\r\n    });\r\n}\r\n\r\nconst ResetButtonWrapper = styled.div`\r\n    display: inline;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    font-size: 3vw;\r\n\r\n    @media screen and (min-width: 601px) {\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst Header = styled.header`\r\n    padding: 1.5em 1.5em 1em;\r\n    text-align: center;\r\n\r\n    h1 {\r\n        font-size: 2em;\r\n        margin: 0;\r\n    }\r\n\r\n    h3 {\r\n        font-family: 'Merriweather', serif;\r\n        font-size: 1em;\r\n        font-weight: normal;\r\n        line-height: 1.7;\r\n        color: #aaa;\r\n        margin: 1em auto 0;\r\n    }\r\n\r\n    ${CasterLabel} {\r\n\r\n        :after {\r\n            content: 's';\r\n        }\r\n\r\n        :not(:last-of-type) {\r\n            :after {\r\n                content: 's, ';\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst BoardWrapper = styled.div`\r\n    margin: 0 auto;\r\n\r\n    @media only screen and (orientation: portrait) {\r\n        max-width: 95vw;\r\n    }\r\n\r\n    @media only screen and (orientation: landscape) {\r\n        max-width: 85vh;\r\n    }\r\n`;\r\n\r\nconst Board = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(19, 1fr);\r\n    grid-gap: 0.25em;\r\n    margin: 0.5em;\r\n\r\n    @media only screen and (min-width: 1920px) {\r\n        grid-gap: 0.25vw;\r\n    }\r\n`;\r\n\r\nconst Aside = styled.aside`\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    color: #aaa;\r\n    padding: 1em 1.5em;\r\n    text-align: left;\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        columns: 2 10em;\r\n        column-gap: 1.5em;\r\n    }\r\n\r\n    h2 {\r\n        color: #fff;\r\n        font-size: 1.25em;\r\n        margin: 0 auto 1em;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n        font-family: 'Merriweather', serif;\r\n        line-height: 1.7;\r\n        margin: 0 auto 1em;\r\n    }\r\n\r\n    ${CopyrightMessage} {\r\n        margin-top: 2em;\r\n    }\r\n\r\n    img {\r\n        width: 7em;\r\n        border-radius: 50%;\r\n    }\r\n`;\r\n\r\nconst Logo = styled.div`\r\n    margin-top: 2em;\r\n    text-align: center;\r\n    column-span: all;\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst ColumnBreakerH2 = styled.h2`\r\n    @media only screen and (min-width: 800px) {\r\n        break-before: column;\r\n        margin-top: 0;\r\n    }\r\n`;\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            'spells': [],\r\n            'selectedId': false,\r\n            'highlightedCasters': [],\r\n            'editMode': false,\r\n            'timeSinceLastSave': 0\r\n        };\r\n\r\n        var currentKey=0;\r\n        for (currentKey in Spells) {\r\n            this.state.spells[currentKey] = Spells[currentKey];\r\n            //console.log(this.state.spells[currentKey]);\r\n        }\r\n\r\n        this.state.selectedId = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.editMode) {\r\n            this.setState({\r\n                'timeSinceLastSave': this.state['timeSinceLastSave'] + 1000\r\n            });\r\n            if (this.state['timeSinceLastSave'] > 100000) {\r\n                this.handleSave(this.state.spells);\r\n                this.setState({\r\n                    'timeSinceLastSave': 0\r\n                });\r\n                console.log('Saved');\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSave(jsonData) {\r\n        const fileData = JSON.stringify(jsonData);\r\n        const blob = new Blob([fileData], {type: \"text/plain\"});\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.download = 'filename.json';\r\n        link.href = url;\r\n        link.click();\r\n    }\r\n\r\n    handleHighlightClick(caster) {\r\n        if (this.state.highlightedCasters.includes(caster)) {\r\n            this.setState({highlightedCasters: this.state.highlightedCasters.filter(hcaster => hcaster !== caster)});\r\n        } else {\r\n            var newCasters = this.state.highlightedCasters;\r\n            newCasters.push(caster);\r\n            this.setState({highlightedCasters: newCasters});\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        if (this.state.editMode) {\r\n            if (this.state.selectedId === i) {\r\n                this.setState({'selectedId': false});\r\n                //console.log('unselected: '+i);\r\n            } else if (this.state.selectedId) {\r\n                //console.log('switching position of ' + this.state.selectedId + ' and ' + i);\r\n                const { spells, selectedId } = this.state;\r\n                this.setState({\r\n                    spells: swap(spells, Number(i), Number(selectedId)),\r\n                    selectedId: false\r\n                });\r\n            } else {\r\n                this.setState({selectedId: i});\r\n                //console.log('selected: ' + i);\r\n            }\r\n        } else {\r\n            /*if (this.state.highlightedCasters === this.state.spells[i].casters) {\r\n                this.setState({highlightedCasters: []});\r\n            } else {\r\n                this.setState({highlightedCasters: this.state.spells[i].casters});\r\n            }*/\r\n        }\r\n    }\r\n\r\n    getHighlightColors(casters) {\r\n\r\n        return casters.filter(value => this.state.highlightedCasters.includes(value));\r\n    }\r\n\r\n    renderEditUi() {\r\n        if (this.state.editMode) {\r\n\r\n            return (\r\n                <EditModeMessage>\r\n                    <p>EDIT MODE, AUTOSAVING</p>\r\n                    <StyledButton onClick={() => this.handleSave(this.state.spells)} label='Save'/>\r\n                </EditModeMessage>\r\n            );\r\n        }\r\n    }\r\n\r\n    /*renderResetButton() {\r\n        if (this.state.highlightedCasters.length !== 0) {\r\n\r\n            return (\r\n                <StyledButton onClick={() => this.setState({highlightedCasters: []})} label='Reset' />\r\n            );\r\n        }\r\n    }*/\r\n\r\n    renderTitleCasterLabels() {\r\n\r\n        return this.state.highlightedCasters.map(caster => <CasterLabel key={caster} caster={caster}>{caster}</CasterLabel>);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Wrapper>\r\n                    <Header>\r\n                        <h1>\r\n                            The Spells of D&D 5e\r\n                        </h1>\r\n                        <h3>\r\n                            <ConicGradientMessage>Oh dang, it seems like your browser doesn't support conic gradients. This thing looks better with them. If you happen to have the latest Chrome or Safari, check this out in those instead!</ConicGradientMessage>\r\n                            {this.renderEditUi()}\r\n                        </h3>\r\n                        <div>\r\n                            <HighlightLabel>Highlight</HighlightLabel>\r\n                            {casters.map(caster => <StyledButton\r\n                                key={caster}\r\n                                label={caster}\r\n                                color={color[caster]}\r\n                                filled={this.state.highlightedCasters.includes(caster)}\r\n                                onClick={() => this.handleHighlightClick(caster)} />)}\r\n                        </div>\r\n                    </Header>\r\n                    <BoardWrapper>\r\n                        <Board>\r\n                            {this.state.spells.map(i => <Spell\r\n                                key={i.id}\r\n                                id={i.id}\r\n                                name={i.name}\r\n                                casters={i.casters}\r\n                                additionalCasters={i.additionalCasters}\r\n                                additionalCastersShown={ this.state.highlightedCasters.length === 0 ? i.additionalCasters : []}\r\n                                level={i.level}\r\n                                selected={this.state.selectedId === i.id ? true : false}\r\n                                hasOpacity={this.state.highlightedCasters.length === 0}\r\n                                highlightColors={this.getHighlightColors(i.casters)}\r\n                                coordinates={i.coordinates}\r\n                                onClick={() => this.handleClick(i.id)}\r\n                            />)}\r\n                        </Board>\r\n                    </BoardWrapper>\r\n                    <Aside>\r\n                        <h2>What is this thing?</h2>\r\n                        <p>Ever wondered how big of an overlap there is between the spells of different casters in DnD? Do you want to know how similar the classes are? Do you like looking at trippy abstract modern art? Then this graphic is for you.</p>\r\n                        <p>I took all 361 spells in the PHB, put them on a grid, colored them according to their caster classes, then meticulously arranged them by hand to form clusters as tight as possible.</p>\r\n                        <p>If you enjoyed this, or found it useful, you can <a href='https://ko-fi.com/B0B511KTL'>buy me a coffee on Ko-Fi!</a></p>\r\n                        <ColumnBreakerH2>Will you include spells from other sources (DMG, SCAG, XGE, AI)?</ColumnBreakerH2>\r\n                        <p>Yeah! Maybe. It's, uh, a lot of work, so it will probably take time.</p>\r\n                        <h2>How did you make this?</h2>\r\n                        <p>I used <a href=\"https://www.reddit.com/r/DnD/comments/2qs89e/5e_spell_reference_sheets_are_done/\">u/Zolo49's spell spreadsheet</a> as a resource, made a JSON file out of it, displayed them on a CSS grid, and used React to create an editing interface that I used to order the spells into these positions.</p>\r\n                        <Logo>\r\n                            <a href=\"http://github.com/dukeflipchart\">\r\n                                <img src={avatar} />\r\n                            </a>\r\n                        </Logo>\r\n                        <CopyrightMessage>\r\n                            This is unofficial, fan-created work. I am not affiliated with Wizards of the Coast in any way. Dungeons & Dragons, D&D, their respective logos, and all Wizards titles and characters are property of Wizards of the Coast LLC in the U.S.A. and other countries.\r\n                        </CopyrightMessage>\r\n                    </Aside>\r\n                </Wrapper>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}